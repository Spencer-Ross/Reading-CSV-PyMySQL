-- MySQL Script generated by MySQL Workbench
-- Tue Apr  7 18:36:40 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema imdb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema imdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS 'imdb' DEFAULT CHARACTER SET utf8 ;
USE 'imdb' ;

-- -----------------------------------------------------
-- Table 'imdb'.'genre'
-- -----------------------------------------------------
DROP TABLE IF EXISTS 'imdb'.'genre' ;

CREATE TABLE IF NOT EXISTS 'imdb'.'genre' (
  'id' INT NOT NULL,
  'name' VARCHAR(255) NOT NULL,
  PRIMARY KEY ('id'));


-- -----------------------------------------------------
-- Table 'imdb'.'movie'
-- -----------------------------------------------------
DROP TABLE IF EXISTS 'imdb'.'movie' ;

CREATE TABLE IF NOT EXISTS 'imdb'.'movie' (
  'id' INT NOT NULL,
  'title' VARCHAR(255) NOT NULL,
  'original_title' VARCHAR(45) NOT NULL,
  'vote_count' INT NOT NULL,
  'vote_average' DECIMAL(1) NOT NULL,
  'tagline' VARCHAR(255) NOT NULL,
  'status' VARBINARY(50) NOT NULL,
  'runtime' INT NOT NULL,
  'revenue' INT NOT NULL,
  'budget' INT NOT NULL,
  'release_date' DATE NOT NULL,
  'original_language' VARCHAR(2) NOT NULL,
  'popularity' DECIMAL(6) NOT NULL,
  'moviecol' VARCHAR(45) NULL,
  PRIMARY KEY ('id'));


-- -----------------------------------------------------
-- Table 'imdb'.'homepage'
-- -----------------------------------------------------
DROP TABLE IF EXISTS 'imdb'.'homepage' ;

CREATE TABLE IF NOT EXISTS 'imdb'.'homepage' (
  'url' VARCHAR(255) NULL,
  'movie_id' INT NOT NULL,
  PRIMARY KEY ('movie_id'),
  CONSTRAINT 'fk_homepage_movie1'
    FOREIGN KEY ('movie_id')
    REFERENCES 'imdb'.'movie' ('id')
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table 'imdb'.'keywords'
-- -----------------------------------------------------
DROP TABLE IF EXISTS 'imdb'.'keywords' ;

CREATE TABLE IF NOT EXISTS 'imdb'.'keywords' (
  'id' INT NOT NULL,
  'name' VARCHAR(255) NOT NULL,
  PRIMARY KEY ('id'));


-- -----------------------------------------------------
-- Table 'imdb'.'overview'
-- -----------------------------------------------------
DROP TABLE IF EXISTS 'imdb'.'overview' ;

CREATE TABLE IF NOT EXISTS 'imdb'.'overview' (
  'movie_id' INT NOT NULL,
  'name' VARCHAR(1000) NOT NULL,
  INDEX 'fk_overview_movie_idx' ('movie_id' ASC) VISIBLE,
  PRIMARY KEY ('movie_id'),
  CONSTRAINT 'fk_overview_movie'
    FOREIGN KEY ('movie_id')
    REFERENCES 'imdb'.'movie' ('id')
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table 'imdb'.'production_companies'
-- -----------------------------------------------------
DROP TABLE IF EXISTS 'imdb'.'production_companies' ;

CREATE TABLE IF NOT EXISTS 'imdb'.'production_companies' (
  'id' INT NOT NULL,
  'name' VARCHAR(255) NOT NULL,
  PRIMARY KEY ('id'));


-- -----------------------------------------------------
-- Table 'imdb'.'production_countries'
-- -----------------------------------------------------
DROP TABLE IF EXISTS 'imdb'.'production_countries' ;

CREATE TABLE IF NOT EXISTS 'imdb'.'production_countries' (
  'iso_3166_1' VARCHAR(2) NOT NULL,
  'name' VARCHAR(255) NOT NULL,
  PRIMARY KEY ('iso_3166_1'));


-- -----------------------------------------------------
-- Table 'imdb'.'spoken_languages'
-- -----------------------------------------------------
DROP TABLE IF EXISTS 'imdb'.'spoken_languages' ;

CREATE TABLE IF NOT EXISTS 'imdb'.'spoken_languages' (
  'iso_639_1' VARCHAR(2) NOT NULL,
  'name' VARCHAR(255) NOT NULL,
  PRIMARY KEY ('iso_639_1'));


-- -----------------------------------------------------
-- Table 'imdb'.'movie_genre'
-- -----------------------------------------------------
DROP TABLE IF EXISTS 'imdb'.'movie_genre' ;

CREATE TABLE IF NOT EXISTS 'imdb'.'movie_genre' (
  'genre_id' INT NOT NULL,
  PRIMARY KEY ('genre_id'),
  CONSTRAINT 'fk_movie_genre_genre1'
    FOREIGN KEY ('genre_id')
    REFERENCES 'imdb'.'genre' ('id')
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table 'imdb'.'movie_has_genre'
-- -----------------------------------------------------
DROP TABLE IF EXISTS 'imdb'.'movie_has_genre' ;

CREATE TABLE IF NOT EXISTS 'imdb'.'movie_has_genre' (
  'movie_id' INT NOT NULL,
  'genre_id' INT NOT NULL,
  PRIMARY KEY ('movie_id', 'genre_id'),
  INDEX 'fk_movie_has_genre_genre1_idx' ('genre_id' ASC) VISIBLE,
  INDEX 'fk_movie_has_genre_movie1_idx' ('movie_id' ASC) VISIBLE,
  CONSTRAINT 'fk_movie_has_genre_movie1'
    FOREIGN KEY ('movie_id')
    REFERENCES 'imdb'.'movie' ('id')
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT 'fk_movie_has_genre_genre1'
    FOREIGN KEY ('genre_id')
    REFERENCES 'imdb'.'genre' ('id')
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table 'imdb'.'movie_has_production_companies'
-- -----------------------------------------------------
DROP TABLE IF EXISTS 'imdb'.'movie_has_production_companies' ;

CREATE TABLE IF NOT EXISTS 'imdb'.'movie_has_production_companies' (
  'movie_id' INT NOT NULL,
  'production_companies_id' INT NOT NULL,
  PRIMARY KEY ('movie_id', 'production_companies_id'),
  INDEX 'fk_movie_has_production_companies_production_companies1_idx' ('production_companies_id' ASC) VISIBLE,
  INDEX 'fk_movie_has_production_companies_movie1_idx' ('movie_id' ASC) VISIBLE,
  CONSTRAINT 'fk_movie_has_production_companies_movie1'
    FOREIGN KEY ('movie_id')
    REFERENCES 'imdb'.'movie' ('id')
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT 'fk_movie_has_production_companies_production_companies1'
    FOREIGN KEY ('production_companies_id')
    REFERENCES 'imdb'.'production_companies' ('id')
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table 'imdb'.'movie_has_production_countries'
-- -----------------------------------------------------
DROP TABLE IF EXISTS 'imdb'.'movie_has_production_countries' ;

CREATE TABLE IF NOT EXISTS 'imdb'.'movie_has_production_countries' (
  'movie_id' INT NOT NULL,
  'production_countries_iso_3166_1' VARCHAR(2) NOT NULL,
  PRIMARY KEY ('movie_id', 'production_countries_iso_3166_1'),
  INDEX 'fk_movie_has_production_countries_production_countries1_idx' ('production_countries_iso_3166_1' ASC) VISIBLE,
  INDEX 'fk_movie_has_production_countries_movie1_idx' ('movie_id' ASC) VISIBLE,
  CONSTRAINT 'fk_movie_has_production_countries_movie1'
    FOREIGN KEY ('movie_id')
    REFERENCES 'imdb'.'movie' ('id')
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT 'fk_movie_has_production_countries_production_countries1'
    FOREIGN KEY ('production_countries_iso_3166_1')
    REFERENCES 'imdb'.'production_countries' ('iso_3166_1')
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table 'imdb'.'movie_has_keywords'
-- -----------------------------------------------------
DROP TABLE IF EXISTS 'imdb'.'movie_has_keywords' ;

CREATE TABLE IF NOT EXISTS 'imdb'.'movie_has_keywords' (
  'movie_id' INT NOT NULL,
  'keywords_id' INT NOT NULL,
  PRIMARY KEY ('movie_id', 'keywords_id'),
  INDEX 'fk_movie_has_keywords_keywords1_idx' ('keywords_id' ASC) VISIBLE,
  INDEX 'fk_movie_has_keywords_movie1_idx' ('movie_id' ASC) VISIBLE,
  CONSTRAINT 'fk_movie_has_keywords_movie1'
    FOREIGN KEY ('movie_id')
    REFERENCES 'imdb'.'movie' ('id')
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT 'fk_movie_has_keywords_keywords1'
    FOREIGN KEY ('keywords_id')
    REFERENCES 'imdb'.'keywords' ('id')
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table 'imdb'.'movie_has_spoken_languages'
-- -----------------------------------------------------
DROP TABLE IF EXISTS 'imdb'.'movie_has_spoken_languages' ;

CREATE TABLE IF NOT EXISTS 'imdb'.'movie_has_spoken_languages' (
  'movie_id' INT NOT NULL,
  'spoken_languages_iso_639_1' VARCHAR(2) NOT NULL,
  PRIMARY KEY ('movie_id', 'spoken_languages_iso_639_1'),
  INDEX 'fk_movie_has_spoken_languages_spoken_languages1_idx' ('spoken_languages_iso_639_1' ASC) VISIBLE,
  INDEX 'fk_movie_has_spoken_languages_movie1_idx' ('movie_id' ASC) VISIBLE,
  CONSTRAINT 'fk_movie_has_spoken_languages_movie1'
    FOREIGN KEY ('movie_id')
    REFERENCES 'imdb'.'movie' ('id')
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT 'fk_movie_has_spoken_languages_spoken_languages1'
    FOREIGN KEY ('spoken_languages_iso_639_1')
    REFERENCES 'imdb'.'spoken_languages' ('iso_639_1')
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
